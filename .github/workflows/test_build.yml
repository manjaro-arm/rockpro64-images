name: test_build
on:
  workflow_dispatch:
#  schedule:
#    - cron:  '30 2 * * 1'

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    steps:
      - 
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - 
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDD'
      - 
        id: release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: Dev ${{ steps.time.outputs.time }}
          draft: false
          prerelease: true
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}

  release:
    runs-on: ubuntu-20.04
    needs: prepare_release
    strategy:
      matrix:
        DEVICE: [rockpro64]
        EDITION: [minimal]
        BRANCH: [unstable]
    steps:
      - 
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - 
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDD'
      -
        id: image-build
        uses: manjaro-arm/rootfs@master
        with:
          device: ${{ matrix.device }}
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          version: ${{ steps.time.outputs.time }}
      - 
        id: upload_release 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ steps.image-build.outputs.file-path }}
          asset_name: ${{ steps.image-build.outputs.file-path }}
          asset_content_type: application/x-iso-image
      - 
        id: upload_sha1
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ steps.image-build.outputs.file-sha1 }}
          asset_name: ${{ steps.image-build.outputs.file-sha1 }}
          asset_content_type: text/plain
      - 
        id: upload_torrent
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ steps.image-build.outputs.file-torrent }}
          asset_name: ${{ steps.image-build.outputs.file-torrent }}
          asset_content_type: application/x-bittorrent
      #- 
      #  id: upload_sig
      #  uses: actions/upload-release-asset@v1.0.2
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #    asset_path: ./${{ steps.image-build.outputs.file-signature }}
      #    asset_name: ${{ steps.image-build.outputs.file-signature }}
      #    asset_content_type: text/plain
      - 
        id: upload_pkg
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ steps.image-build.outputs.file-pkg }}
          asset_name: ${{ steps.image-build.outputs.file-pkg }}
          asset_content_type: text/plain
      - 
        name: rollback_release
        if: failure()
        uses: author/action-rollback@stable
        with:
          release_id: ${{ needs.prepare_release.outputs.release_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
